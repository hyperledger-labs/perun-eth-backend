// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package adjudicator

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// AdjudicatorSignedState is an auto generated low-level Go binding around an user-defined struct.
type AdjudicatorSignedState struct {
	Params ChannelParams
	State  ChannelState
	Sigs   [][]byte
}

// ChannelAllocation is an auto generated low-level Go binding around an user-defined struct.
type ChannelAllocation struct {
	Assets   []ChannelAsset
	Backends []*big.Int
	Balances [][]*big.Int
	Locked   []ChannelSubAlloc
}

// ChannelAsset is an auto generated low-level Go binding around an user-defined struct.
type ChannelAsset struct {
	ChainID   *big.Int
	EthHolder common.Address
	CcHolder  []byte
}

// ChannelParams is an auto generated low-level Go binding around an user-defined struct.
type ChannelParams struct {
	ChallengeDuration *big.Int
	Nonce             *big.Int
	Participants      []ChannelParticipant
	App               common.Address
	LedgerChannel     bool
	VirtualChannel    bool
}

// ChannelParticipant is an auto generated low-level Go binding around an user-defined struct.
type ChannelParticipant struct {
	EthAddress common.Address
	CcAddress  []byte
}

// ChannelState is an auto generated low-level Go binding around an user-defined struct.
type ChannelState struct {
	ChannelID [32]byte
	Version   uint64
	Outcome   ChannelAllocation
	AppData   []byte
	IsFinal   bool
}

// ChannelSubAlloc is an auto generated low-level Go binding around an user-defined struct.
type ChannelSubAlloc struct {
	ID       [32]byte
	Balances []*big.Int
	IndexMap []uint16
}

// AdjudicatorMetaData contains all meta data concerning the Adjudicator contract.
var AdjudicatorMetaData = &bind.MetaData{
	ABI: "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"channelID\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"phase\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"timeout\",\"type\":\"uint64\"}],\"name\":\"ChannelUpdate\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"challengeDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"ethAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ccAddress\",\"type\":\"bytes\"}],\"internalType\":\"structChannel.Participant[]\",\"name\":\"participants\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"ledgerChannel\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"virtualChannel\",\"type\":\"bool\"}],\"internalType\":\"structChannel.Params\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"channelID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"challengeDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"ethAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ccAddress\",\"type\":\"bytes\"}],\"internalType\":\"structChannel.Participant[]\",\"name\":\"participants\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"ledgerChannel\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"virtualChannel\",\"type\":\"bool\"}],\"internalType\":\"structChannel.Params\",\"name\":\"params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"channelID\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"chainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ethHolder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ccHolder\",\"type\":\"bytes\"}],\"internalType\":\"structChannel.Asset[]\",\"name\":\"assets\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"backends\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"balances\",\"type\":\"uint256[][]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint16[]\",\"name\":\"indexMap\",\"type\":\"uint16[]\"}],\"internalType\":\"structChannel.SubAlloc[]\",\"name\":\"locked\",\"type\":\"tuple[]\"}],\"internalType\":\"structChannel.Allocation\",\"name\":\"outcome\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"appData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"isFinal\",\"type\":\"bool\"}],\"internalType\":\"structChannel.State\",\"name\":\"state\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"channelID\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"chainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ethHolder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ccHolder\",\"type\":\"bytes\"}],\"internalType\":\"structChannel.Asset[]\",\"name\":\"assets\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"backends\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"balances\",\"type\":\"uint256[][]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint16[]\",\"name\":\"indexMap\",\"type\":\"uint16[]\"}],\"internalType\":\"structChannel.SubAlloc[]\",\"name\":\"locked\",\"type\":\"tuple[]\"}],\"internalType\":\"structChannel.Allocation\",\"name\":\"outcome\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"appData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"isFinal\",\"type\":\"bool\"}],\"internalType\":\"structChannel.State[]\",\"name\":\"subStates\",\"type\":\"tuple[]\"}],\"name\":\"conclude\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"challengeDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"ethAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ccAddress\",\"type\":\"bytes\"}],\"internalType\":\"structChannel.Participant[]\",\"name\":\"participants\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"ledgerChannel\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"virtualChannel\",\"type\":\"bool\"}],\"internalType\":\"structChannel.Params\",\"name\":\"params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"channelID\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"chainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ethHolder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ccHolder\",\"type\":\"bytes\"}],\"internalType\":\"structChannel.Asset[]\",\"name\":\"assets\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"backends\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"balances\",\"type\":\"uint256[][]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint16[]\",\"name\":\"indexMap\",\"type\":\"uint16[]\"}],\"internalType\":\"structChannel.SubAlloc[]\",\"name\":\"locked\",\"type\":\"tuple[]\"}],\"internalType\":\"structChannel.Allocation\",\"name\":\"outcome\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"appData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"isFinal\",\"type\":\"bool\"}],\"internalType\":\"structChannel.State\",\"name\":\"state\",\"type\":\"tuple\"},{\"internalType\":\"bytes[]\",\"name\":\"sigs\",\"type\":\"bytes[]\"}],\"name\":\"concludeFinal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"disputes\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"timeout\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"challengeDuration\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"phase\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"stateHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"hasApp\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"channelID\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"chainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ethHolder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ccHolder\",\"type\":\"bytes\"}],\"internalType\":\"structChannel.Asset[]\",\"name\":\"assets\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"backends\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"balances\",\"type\":\"uint256[][]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint16[]\",\"name\":\"indexMap\",\"type\":\"uint16[]\"}],\"internalType\":\"structChannel.SubAlloc[]\",\"name\":\"locked\",\"type\":\"tuple[]\"}],\"internalType\":\"structChannel.Allocation\",\"name\":\"outcome\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"appData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"isFinal\",\"type\":\"bool\"}],\"internalType\":\"structChannel.State\",\"name\":\"state\",\"type\":\"tuple\"}],\"name\":\"hashState\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"challengeDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"ethAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ccAddress\",\"type\":\"bytes\"}],\"internalType\":\"structChannel.Participant[]\",\"name\":\"participants\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"ledgerChannel\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"virtualChannel\",\"type\":\"bool\"}],\"internalType\":\"structChannel.Params\",\"name\":\"params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"channelID\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"chainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ethHolder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ccHolder\",\"type\":\"bytes\"}],\"internalType\":\"structChannel.Asset[]\",\"name\":\"assets\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"backends\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"balances\",\"type\":\"uint256[][]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint16[]\",\"name\":\"indexMap\",\"type\":\"uint16[]\"}],\"internalType\":\"structChannel.SubAlloc[]\",\"name\":\"locked\",\"type\":\"tuple[]\"}],\"internalType\":\"structChannel.Allocation\",\"name\":\"outcome\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"appData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"isFinal\",\"type\":\"bool\"}],\"internalType\":\"structChannel.State\",\"name\":\"stateOld\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"channelID\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"chainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ethHolder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ccHolder\",\"type\":\"bytes\"}],\"internalType\":\"structChannel.Asset[]\",\"name\":\"assets\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"backends\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"balances\",\"type\":\"uint256[][]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint16[]\",\"name\":\"indexMap\",\"type\":\"uint16[]\"}],\"internalType\":\"structChannel.SubAlloc[]\",\"name\":\"locked\",\"type\":\"tuple[]\"}],\"internalType\":\"structChannel.Allocation\",\"name\":\"outcome\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"appData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"isFinal\",\"type\":\"bool\"}],\"internalType\":\"structChannel.State\",\"name\":\"state\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"actorIdx\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"progress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"challengeDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"ethAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ccAddress\",\"type\":\"bytes\"}],\"internalType\":\"structChannel.Participant[]\",\"name\":\"participants\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"ledgerChannel\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"virtualChannel\",\"type\":\"bool\"}],\"internalType\":\"structChannel.Params\",\"name\":\"params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"channelID\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"chainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ethHolder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ccHolder\",\"type\":\"bytes\"}],\"internalType\":\"structChannel.Asset[]\",\"name\":\"assets\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"backends\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"balances\",\"type\":\"uint256[][]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint16[]\",\"name\":\"indexMap\",\"type\":\"uint16[]\"}],\"internalType\":\"structChannel.SubAlloc[]\",\"name\":\"locked\",\"type\":\"tuple[]\"}],\"internalType\":\"structChannel.Allocation\",\"name\":\"outcome\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"appData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"isFinal\",\"type\":\"bool\"}],\"internalType\":\"structChannel.State\",\"name\":\"state\",\"type\":\"tuple\"},{\"internalType\":\"bytes[]\",\"name\":\"sigs\",\"type\":\"bytes[]\"}],\"internalType\":\"structAdjudicator.SignedState\",\"name\":\"channel\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"challengeDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"ethAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ccAddress\",\"type\":\"bytes\"}],\"internalType\":\"structChannel.Participant[]\",\"name\":\"participants\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"ledgerChannel\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"virtualChannel\",\"type\":\"bool\"}],\"internalType\":\"structChannel.Params\",\"name\":\"params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"channelID\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"chainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ethHolder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ccHolder\",\"type\":\"bytes\"}],\"internalType\":\"structChannel.Asset[]\",\"name\":\"assets\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"backends\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"balances\",\"type\":\"uint256[][]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint16[]\",\"name\":\"indexMap\",\"type\":\"uint16[]\"}],\"internalType\":\"structChannel.SubAlloc[]\",\"name\":\"locked\",\"type\":\"tuple[]\"}],\"internalType\":\"structChannel.Allocation\",\"name\":\"outcome\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"appData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"isFinal\",\"type\":\"bool\"}],\"internalType\":\"structChannel.State\",\"name\":\"state\",\"type\":\"tuple\"},{\"internalType\":\"bytes[]\",\"name\":\"sigs\",\"type\":\"bytes[]\"}],\"internalType\":\"structAdjudicator.SignedState[]\",\"name\":\"subChannels\",\"type\":\"tuple[]\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x608060405234801561001057600080fd5b506134e0806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637a114d3d1161005b5780637a114d3d1461014b578063db77bb271461016c578063e7c01d051461017f578063e9aa7e021461019257600080fd5b806311be1997146100825780634c8a2c901461012357806375a8722314610138575b600080fd5b6100dd6100903660046123a1565b6000602081905290815260409020805460018201546002909201546001600160401b0380831693600160401b8404821693600160801b81049092169260ff600160c01b9093048316921686565b604080516001600160401b0397881681529587166020870152939095169284019290925260ff166060830152608082015290151560a082015260c0015b60405180910390f35b610136610131366004612b29565b6101a5565b005b610136610146366004612c5e565b610438565b61015e610159366004612ce5565b6105a5565b60405190815260200161011a565b61015e61017a366004612d21565b6105be565b61013661018d366004612d55565b6105c9565b6101366101a0366004612edf565b61062c565b60006101b4846000015161065a565b8054909150600160c01b900460ff166102205780546001600160401b031642101561021b5760405162461bcd60e51b81526020600482015260126024820152711d1a5b595bdd5d081b9bdd081c185cdcd95960721b60448201526064015b60405180910390fd5b6102b7565b8054600019600160c01b90910460ff160161027f5780546001600160401b0316421061021b5760405162461bcd60e51b815260206004820152600e60248201526d1d1a5b595bdd5d081c185cdcd95960921b6044820152606401610212565b60405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420706861736560981b6044820152606401610212565b60608601516001600160a01b03166103015760405162461bcd60e51b815260206004820152600d60248201526c06d75737420686176652061707609c1b6044820152606401610212565b856040015151831061034d5760405162461bcd60e51b81526020600482015260156024820152746163746f72496478206f7574206f662072616e676560581b6044820152606401610212565b61035786856106b3565b610360856105a5565b8160010154146103a45760405162461bcd60e51b815260206004820152600f60248201526e77726f6e67206f6c6420737461746560881b6044820152606401610212565b6103d86103b085610700565b83886040015186815181106103c7576103c7612fc9565b602002602001015160000151610729565b6104185760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b6044820152606401610212565b610424868686866107b2565b610430868560016108fe565b505050505050565b82608001516104595760405162461bcd60e51b815260040161021290612fdf565b608082015115156001146104a15760405162461bcd60e51b815260206004820152600f60248201526e1cdd185d19481b9bdd08199a5b985b608a1b6044820152606401610212565b60408201516060015151156104eb5760405162461bcd60e51b815260206004820152601060248201526f686173207375622d6368616e6e656c7360801b6044820152606401610212565b6104f583836106b3565b610500838383610ab7565b8151600090815260208190526040902060018101541580159061056e578154600119600160c01b90910460ff160161056e5760405162461bcd60e51b8152602060048201526011602482015270636f6e636c7564656420616c726561647960781b6044820152606401610212565b61057a858560026108fe565b61059e84600001518560400151600001518760400151876040015160400151610ba9565b5050505050565b60006105b082610700565b805190602001209050919050565b60006105b082610c82565b82608001516105ea5760405162461bcd60e51b815260040161021290612fdf565b6105f483836106b3565b6105fd82610c95565b600061060b83836000610e7a565b50835160408086015151908701519293506106269284610ba9565b50505050565b81516080015161064e5760405162461bcd60e51b815260040161021290612fdf565b61062682826000611205565b600081815260208190526040902060018101541515806106ad5760405162461bcd60e51b815260206004820152600e60248201526d1b9bdd081c9959da5cdd195c995960921b6044820152606401610212565b50919050565b6106bc826105be565b8151146106fc5760405162461bcd60e51b815260206004820152600e60248201526d696e76616c696420706172616d7360901b6044820152606401610212565b5050565b60608160405160200161071391906132c8565b6040516020818303038152906040529050919050565b60008061078a85805190602001206040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b905060006107988286611388565b6001600160a01b0390811690851614925050509392505050565b60208301516107c29060016132f8565b6001600160401b031682602001516001600160401b0316146108265760405162461bcd60e51b815260206004820152601d60248201527f76657273696f6e206d75737420696e6372656d656e74206279206f6e650000006044820152606401610212565b6080830151156108785760405162461bcd60e51b815260206004820181905260248201527f63616e6e6f742070726f67726573732066726f6d2066696e616c2073746174656044820152606401610212565b610890836040015183604001518660400151516113ac565b606084015160405163f7530b4160e01b81526001600160a01b0382169063f7530b41906108c79088908890889088906004016133e6565b60006040518083038186803b1580156108df57600080fd5b505afa1580156108f3573d6000803e3d6000fd5b505050505050505050565b81516000908152602081815260409091206001810154855182549386015177ffffffffffffffffffffffffffffffff000000000000000019909416600160401b6001600160401b039283160267ffffffffffffffff60801b191617600160801b9190941602929092178155606085015190911515906001600160a01b031615156002838101805460ff19169215159290921790915583908111156109a4576109a4612fb3565b825460ff91909116600160c01b0260ff60c01b199091161782556109c7846105a5565b60018301556080840151156109f557815467ffffffffffffffff1916426001600160401b0316178255610a4c565b801580610a0e5750815460ff600160c01b909104166001145b15610a4c578154610a2f90600160401b90046001600160401b0316426132f8565b825467ffffffffffffffff19166001600160401b03919091161782555b83516040805160c08101825284546001600160401b038082168352600160401b820481166020840152600160801b82041692820192909252600160c01b90910460ff908116606083015260018501546080830152600285015416151560a082015261059e9190611697565b6000610ac283610700565b9050815184604001515114610b195760405162461bcd60e51b815260206004820152601a60248201527f7369676e617475726573206c656e677468206d69736d617463680000000000006044820152606401610212565b60005b825181101561059e57610b5982848381518110610b3b57610b3b612fc9565b6020026020010151876040015184815181106103c7576103c7612fc9565b610b995760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b6044820152606401610212565b610ba281613431565b9050610b1c565b60005b835181101561059e576000848281518110610bc957610bc9612fc9565b6020026020010151905046816000015103610c715760208101516001600160a01b031615610c715780602001516001600160a01b031663295482ce8786868681518110610c1857610c18612fc9565b60200260200101516040518463ffffffff1660e01b8152600401610c3e9392919061344a565b600060405180830381600087803b158015610c5857600080fd5b505af1158015610c6c573d6000803e3d6000fd5b505050505b50610c7b81613431565b9050610bac565b606081604051602001610713919061347f565b6000610ca4826000015161065a565b9050610caf826105a5565b816001015414610cf15760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420737461746560981b6044820152606401610212565b8054600119600160c01b90910460ff1601610d425760405162461bcd60e51b8152602060048201526011602482015270185b1c9958591e4818dbdb98db1d591959607a1b6044820152606401610212565b8054600160c01b900460ff16158015610d5f5750600281015460ff165b15610d9f578054610d82906001600160401b03600160401b8204811691166132f8565b815467ffffffffffffffff19166001600160401b03919091161781555b80546001600160401b0316421015610df25760405162461bcd60e51b81526020600482015260166024820152751d1a5b595bdd5d081b9bdd081c185cdcd959081e595d60521b6044820152606401610212565b60025b815460ff60c01b198116600160c01b60ff938416810291821780865586516040805160c0810182526001600160401b03968716958716959095178552600160401b830486166020860152600160801b8304909516948401949094520483166060820152600184015460808201526002840154909216151560a08301526106fc91611697565b60606000610e8785611789565b60408501515180516001600160401b03811115610ea657610ea66123ba565b604051908082528060200260200182016040528015610ed957816020015b6060815260200190600190039081610ec45790505b50925060005b815181101561100e5760008760400151604001518281518110610f0457610f04612fc9565b6020026020010151905080516001600160401b03811115610f2757610f276123ba565b604051908082528060200260200182016040528015610f50578160200160208202803683370190505b50858381518110610f6357610f63612fc9565b602002602001018190525060005b8151811015610ffb578860400151604001518381518110610f9457610f94612fc9565b60200260200101518181518110610fad57610fad612fc9565b6020026020010151868481518110610fc757610fc7612fc9565b60200260200101518281518110610fe057610fe0612fc9565b6020908102919091010152610ff481613431565b9050610f71565b50508061100790613431565b9050610edf565b5060408601516060015184925060005b81518110156111fa57600082828151811061103b5761103b612fc9565b60200260200101519050600088868061105390613431565b97508151811061106557611065612fc9565b6020026020010151905080600001518260000151146110be5760405162461bcd60e51b81526020600482015260156024820152741a5b9d985b1a59081cdd5898da185b9b995b081a59605a1b6044820152606401610212565b60606110cb828b89610e7a565b604085015190985090915060005b87518110156111e45760005b82518110156111d357600084838151811061110257611102612fc9565b6020026020010151828151811061111b5761111b612fc9565b60200260200101519050600084838151811061113957611139612fc9565b60200260200101519050818d858151811061115657611156612fc9565b60200260200101518261ffff168151811061117357611173612fc9565b60200260200101516111859190613492565b8d858151811061119757611197612fc9565b60200260200101518261ffff16815181106111b4576111b4612fc9565b6020026020010181815250505050806111cc90613431565b90506110e5565b506111dd81613431565b90506110d9565b5050505050806111f390613431565b905061101e565b505050935093915050565b6020830151604001518051606091839161121e87611800565b61122b8260400151611a5c565b93506000826060015190508651815111156112805760405162461bcd60e51b81526020600482015260156024820152741cdd5890da185b9b995b1cc81d1bdbc81cda1bdc9d605a1b6044820152606401610212565b60005b815181101561137c576000888661129981613431565b9750815181106112ab576112ab612fc9565b602002602001015190506000808484815181106112ca576112ca612fc9565b6020026020010151836020015191509150806000015182600001511461132b5760405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a59081cdd588b58da185b9b995b081a5960521b6044820152606401610212565b6060611338848d8b611205565b604084015151909a5090915061134f908890611b57565b61135d836020015182611bf8565b6113678a82611ce6565b505050508061137590613431565b9050611283565b50505050935093915050565b60008060006113978585611d5d565b915091506113a481611dcb565b509392505050565b816040015151836040015151146114055760405162461bcd60e51b815260206004820152601860248201527f62616c616e636573206c656e677468206d69736d6174636800000000000000006044820152606401610212565b815151835151146114515760405162461bcd60e51b81526020600482015260166024820152750c2e6e6cae8e640d8cadccee8d040dad2e6dac2e8c6d60531b6044820152606401610212565b61146383606001518360600151611f84565b60005b825151811015610626576114b48460000151828151811061148957611489612fc9565b6020026020010151846000015183815181106114a7576114a7612fc9565b602002602001015161202d565b60008083866040015184815181106114ce576114ce612fc9565b602002602001015151146115245760405162461bcd60e51b815260206004820152601c60248201527f6f6c642062616c616e636573206c656e677468206d69736d61746368000000006044820152606401610212565b838560400151848151811061153b5761153b612fc9565b602002602001015151146115915760405162461bcd60e51b815260206004820152601c60248201527f6e65772062616c616e636573206c656e677468206d69736d61746368000000006044820152606401610212565b60005b8481101561163457866040015184815181106115b2576115b2612fc9565b602002602001015181815181106115cb576115cb612fc9565b6020026020010151836115de9190613492565b9250856040015184815181106115f6576115f6612fc9565b6020026020010151818151811061160f5761160f612fc9565b6020026020010151826116229190613492565b915061162d81613431565b9050611594565b508082146116845760405162461bcd60e51b815260206004820152601860248201527f73756d206f662062616c616e636573206d69736d6174636800000000000000006044820152606401610212565b50508061169090613431565b9050611466565b600082815260208181526040918290208351815485840151868601516060808901516001600160401b039586166fffffffffffffffffffffffffffffffff199095168517600160401b948716949094029390931768ffffffffffffffffff60801b1916600160801b9590921694850260ff60c01b191691909117600160c01b60ff9093169283021785556080880151600186015560a08801516002909501805460ff1916951515959095179094558551928352938201939093529283019190915283917f895ef5a5fc3efd313a300b006d6ce97ff0670dfe04f6eea90417edf924fa786b910160405180910390a25050565b6000611798826000015161065a565b90506117a3826105a5565b8160010154146117e55760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420737461746560981b6044820152606401610212565b805460ff600160c01b909104166002146106fc576002610df5565b8051602082015161181182826106b3565b61182082828560400151610ab7565b8160a00151156118bd5760608201516001600160a01b0316156118775760405162461bcd60e51b815260206004820152600f60248201526e063616e6e6f7420686176652061707608c1b6044820152606401610212565b60408101516060015151156118bd5760405162461bcd60e51b815260206004820152600c60248201526b199d5b991cc81b1bd8dad95960a21b6044820152606401610212565b8051600090815260208181526040918290206001810154835160c08101855282546001600160401b038082168352600160401b8204811695830195909552600160801b810490941694810194909452600160c01b90920460ff90811660608501526080840183905260029091015416151560a083015215801590611a5057611944836105a5565b826080015103611955575050505050565b82602001516001600160401b031682604001516001600160401b0316106119b05760405162461bcd60e51b815260206004820152600f60248201526e34b73b30b634b2103b32b939b4b7b760891b6044820152606401610212565b606082015160ff16156119f75760405162461bcd60e51b815260206004820152600f60248201526e696e636f727265637420706861736560881b6044820152606401610212565b81516001600160401b03164210611a505760405162461bcd60e51b815260206004820152601960248201527f72656675746174696f6e2074696d656f757420706173736564000000000000006044820152606401610212565b61059e848460006108fe565b606081516001600160401b03811115611a7757611a776123ba565b604051908082528060200260200182016040528015611aa0578160200160208202803683370190505b50905060005b82518110156106ad576000838281518110611ac357611ac3612fc9565b6020026020010151905060005b8151811015611b4457818181518110611aeb57611aeb612fc9565b6020026020010151848481518110611b0557611b05612fc9565b6020026020010151611b179190613492565b848481518110611b2957611b29612fc9565b6020908102919091010152611b3d81613431565b9050611ad0565b505080611b5090613431565b9050611aa6565b8051825114611ba85760405162461bcd60e51b815260206004820152601760248201527f41737365745b5d3a20756e657175616c206c656e6774680000000000000000006044820152606401610212565b60005b8251811015611bf357611be3838281518110611bc957611bc9612fc9565b60200260200101518383815181106114a7576114a7612fc9565b611bec81613431565b9050611bab565b505050565b8051825114611c495760405162461bcd60e51b815260206004820152601960248201527f75696e743235365b5d3a20756e657175616c206c656e677468000000000000006044820152606401610212565b60005b8251811015611bf357818181518110611c6757611c67612fc9565b6020026020010151838281518110611c8157611c81612fc9565b602002602001015114611cd65760405162461bcd60e51b815260206004820152601760248201527f75696e743235365b5d3a20756e657175616c206974656d0000000000000000006044820152606401610212565b611cdf81613431565b9050611c4c565b60005b8251811015611bf357818181518110611d0457611d04612fc9565b6020026020010151838281518110611d1e57611d1e612fc9565b6020026020010151611d309190613492565b838281518110611d4257611d42612fc9565b6020908102919091010152611d5681613431565b9050611ce9565b6000808251604103611d935760208301516040840151606085015160001a611d8787828585612125565b94509450505050611dc4565b8251604003611dbc5760208301516040840151611db1868383612212565b935093505050611dc4565b506000905060025b9250929050565b6000816004811115611ddf57611ddf612fb3565b03611de75750565b6001816004811115611dfb57611dfb612fb3565b03611e485760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610212565b6002816004811115611e5c57611e5c612fb3565b03611ea95760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610212565b6003816004811115611ebd57611ebd612fb3565b03611f155760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610212565b6004816004811115611f2957611f29612fb3565b03611f815760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610212565b50565b8051825114611fd55760405162461bcd60e51b815260206004820152601a60248201527f537562416c6c6f635b5d3a20756e657175616c206c656e6774680000000000006044820152606401610212565b60005b8251811015611bf35761201d838281518110611ff657611ff6612fc9565b602002602001015183838151811061201057612010612fc9565b602002602001015161224b565b61202681613431565b9050611fd8565b80518251146120705760405162461bcd60e51b815260206004820152600f60248201526e1d5b995c5d585b0818da185a5b9251608a1b6044820152606401610212565b80602001516001600160a01b031682602001516001600160a01b0316146120cd5760405162461bcd60e51b81526020600482015260116024820152703ab732b8bab0b61032ba342437b63232b960791b6044820152606401610212565b806040015180519060200120826040015180519060200120146106fc5760405162461bcd60e51b815260206004820152601060248201526f3ab732b8bab0b61031b1a437b63232b960811b6044820152606401610212565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561215c5750600090506003612209565b8460ff16601b1415801561217457508460ff16601c14155b156121855750600090506004612209565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156121d9573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661220257600060019250925050612209565b9150600090505b94509492505050565b6000806001600160ff1b0383168161222f60ff86901c601b613492565b905061223d87828885612125565b935093505050935093915050565b80518251146122935760405162461bcd60e51b815260206004820152601460248201527314dd58905b1b1bd8ce881d5b995c5d585b08125160621b6044820152606401610212565b6122a582602001518260200151611bf8565b6106fc8260400151826040015180518251146123035760405162461bcd60e51b815260206004820152601860248201527f75696e7431365b5d3a20756e657175616c206c656e67746800000000000000006044820152606401610212565b60005b8251811015611bf35781818151811061232157612321612fc9565b602002602001015161ffff1683828151811061233f5761233f612fc9565b602002602001015161ffff16146123915760405162461bcd60e51b815260206004820152601660248201527575696e7431365b5d3a20756e657175616c206974656d60501b6044820152606401610212565b61239a81613431565b9050612306565b6000602082840312156123b357600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b03811182821017156123f2576123f26123ba565b60405290565b604080519081016001600160401b03811182821017156123f2576123f26123ba565b604051606081016001600160401b03811182821017156123f2576123f26123ba565b604051608081016001600160401b03811182821017156123f2576123f26123ba565b60405160a081016001600160401b03811182821017156123f2576123f26123ba565b604051601f8201601f191681016001600160401b03811182821017156124a8576124a86123ba565b604052919050565b60006001600160401b038211156124c9576124c96123ba565b5060051b60200190565b80356001600160a01b03811681146124ea57600080fd5b919050565b600082601f83011261250057600080fd5b81356001600160401b03811115612519576125196123ba565b61252c601f8201601f1916602001612480565b81815284602083860101111561254157600080fd5b816020850160208301376000918101602001919091529392505050565b803580151581146124ea57600080fd5b600060c0828403121561258057600080fd5b6125886123d0565b905081358152602080830135818301526040808401356001600160401b03808211156125b357600080fd5b818601915086601f8301126125c757600080fd5b81356125da6125d5826124b0565b612480565b81815260059190911b830185019085810190898311156125f957600080fd5b8685015b83811015612673578035858111156126155760008081fd5b8601808c03601f190188131561262b5760008081fd5b6126336123f8565b61263e8a83016124d3565b815288820135878111156126525760008081fd5b6126608e8c838601016124ef565b828c0152508452509187019187016125fd565b5080868901525050505050505061268c606083016124d3565b606082015261269d6080830161255e565b60808201526126ae60a0830161255e565b60a082015292915050565b600082601f8301126126ca57600080fd5b813560206126da6125d5836124b0565b82815260059290921b840181019181810190868411156126f957600080fd5b8286015b8481101561278b5780356001600160401b038082111561271d5760008081fd5b908801906060828b03601f19018113156127375760008081fd5b61273f61241a565b87840135815260406127528186016124d3565b828a01529184013591838311156127695760008081fd5b6127778d8a858801016124ef565b9082015286525050509183019183016126fd565b509695505050505050565b600082601f8301126127a757600080fd5b813560206127b76125d5836124b0565b82815260059290921b840181019181810190868411156127d657600080fd5b8286015b8481101561278b57803583529183019183016127da565b600082601f83011261280257600080fd5b813560206128126125d5836124b0565b82815260059290921b8401810191818101908684111561283157600080fd5b8286015b8481101561278b5780356001600160401b038111156128545760008081fd5b6128628986838b0101612796565b845250918301918301612835565b600082601f83011261288157600080fd5b813560206128916125d5836124b0565b828152600592831b85018201928282019190878511156128b057600080fd5b8387015b858110156129c05780356001600160401b03808211156128d45760008081fd5b908901906060828c03601f19018113156128ee5760008081fd5b6128f661241a565b888401358152604080850135848111156129105760008081fd5b61291e8f8c83890101612796565b838c0152509184013591838311156129365760008081fd5b82850194508d603f86011261294d57600093508384fd5b89850135935061295f6125d5856124b0565b84815293871b85018101938a810193508e85111561297d5760008081fd5b948101945b848610156129ac57853561ffff8116811461299d5760008081fd5b8452948a0194928a0192612982565b9082015287525050509284019284016128b4565b5090979650505050505050565b6000608082840312156129df57600080fd5b6129e761243c565b905081356001600160401b0380821115612a0057600080fd5b612a0c858386016126b9565b83526020840135915080821115612a2257600080fd5b612a2e85838601612796565b60208401526040840135915080821115612a4757600080fd5b612a53858386016127f1565b60408401526060840135915080821115612a6c57600080fd5b50612a7984828501612870565b60608301525092915050565b600060a08284031215612a9757600080fd5b612a9f61245e565b90508135815260208201356001600160401b038082168214612ac057600080fd5b8160208401526040840135915080821115612ada57600080fd5b612ae6858386016129cd565b60408401526060840135915080821115612aff57600080fd5b50612b0c848285016124ef565b606083015250612b1e6080830161255e565b608082015292915050565b600080600080600060a08688031215612b4157600080fd5b85356001600160401b0380821115612b5857600080fd5b612b6489838a0161256e565b96506020880135915080821115612b7a57600080fd5b612b8689838a01612a85565b95506040880135915080821115612b9c57600080fd5b612ba889838a01612a85565b9450606088013593506080880135915080821115612bc557600080fd5b50612bd2888289016124ef565b9150509295509295909350565b600082601f830112612bf057600080fd5b81356020612c006125d5836124b0565b82815260059290921b84018101918181019086841115612c1f57600080fd5b8286015b8481101561278b5780356001600160401b03811115612c425760008081fd5b612c508986838b01016124ef565b845250918301918301612c23565b600080600060608486031215612c7357600080fd5b83356001600160401b0380821115612c8a57600080fd5b612c968783880161256e565b94506020860135915080821115612cac57600080fd5b612cb887838801612a85565b93506040860135915080821115612cce57600080fd5b50612cdb86828701612bdf565b9150509250925092565b600060208284031215612cf757600080fd5b81356001600160401b03811115612d0d57600080fd5b612d1984828501612a85565b949350505050565b600060208284031215612d3357600080fd5b81356001600160401b03811115612d4957600080fd5b612d198482850161256e565b600080600060608486031215612d6a57600080fd5b83356001600160401b0380821115612d8157600080fd5b612d8d8783880161256e565b9450602091508186013581811115612da457600080fd5b612db088828901612a85565b945050604086013581811115612dc557600080fd5b8601601f81018813612dd657600080fd5b8035612de46125d5826124b0565b81815260059190911b8201840190848101908a831115612e0357600080fd5b8584015b83811015612e3b57803586811115612e1f5760008081fd5b612e2d8d8983890101612a85565b845250918601918601612e07565b508096505050505050509250925092565b600060608284031215612e5e57600080fd5b612e6661241a565b905081356001600160401b0380821115612e7f57600080fd5b612e8b8583860161256e565b83526020840135915080821115612ea157600080fd5b612ead85838601612a85565b60208401526040840135915080821115612ec657600080fd5b50612ed384828501612bdf565b60408301525092915050565b60008060408385031215612ef257600080fd5b82356001600160401b0380821115612f0957600080fd5b612f1586838701612e4c565b9350602091508185013581811115612f2c57600080fd5b8501601f81018713612f3d57600080fd5b8035612f4b6125d5826124b0565b81815260059190911b82018401908481019089831115612f6a57600080fd5b8584015b83811015612fa257803586811115612f865760008081fd5b612f948c8983890101612e4c565b845250918601918601612f6e565b508096505050505050509250929050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6020808252600a90820152693737ba103632b233b2b960b11b604082015260600190565b6000815180845260005b818110156130295760208185018101518683018201520161300d565b8181111561303b576000602083870101525b50601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b8381101561308057815187529582019590820190600101613064565b509495945050505050565b600081518084526020808501808196508360051b8101915082860160005b858110156130d35782840389526130c1848351613050565b988501989350908401906001016130a9565b5091979650505050505050565b600081518084526020808501808196508360051b810191508286016000805b86811015613184578385038a52825160608151875287820151818989015261312982890182613050565b604093840151898203948a01949094528351808252938a0193869350908a0191505b8083101561316f57835161ffff16825292890192600192909201919089019061314b565b509b88019b96505050918501916001016130ff565b509298975050505050505050565b80518252600060206001600160401b0381840151168185015260408084015160a08287015261012086018151608060a08901528181518084526101409350838a019150838160051b8b01019350868301925060005b8181101561323b578a850361013f19018352835180518652888101516001600160a01b031689870152870151606088870181905261322781880183613003565b9650505092870192918701916001016131e7565b50505050838201519350609f19808883030160c089015261325c8286613050565b93830151888503820160e08a0152939450613277858561308b565b945060608301519350808886030161010089015250505061329882826130e0565b915050606083015184820360608601526132b28282613003565b91505060808301516113a4608086018215159052565b6020815260006132db6020830184613192565b9392505050565b634e487b7160e01b600052601160045260246000fd5b60006001600160401b0380831681851680830382111561331a5761331a6132e2565b01949350505050565b600081518084526020808501808196508360051b8101915082860160005b858110156130d3578284038952815180516001600160a01b03168552850151604086860181905261337481870183613003565b9a87019a9550505090840190600101613341565b80518252602081015160208301526000604082015160c060408501526133b160c0850182613323565b6060848101516001600160a01b03169086015260808085015115159086015260a0938401511515949093019390935250919050565b6080815260006133f96080830187613388565b828103602084015261340b8187613192565b9050828103604084015261341f8186613192565b91505082606083015295945050505050565b600060018201613443576134436132e2565b5060010190565b8381526060602082015260006134636060830185613323565b82810360408401526134758185613050565b9695505050505050565b6020815260006132db6020830184613388565b600082198211156134a5576134a56132e2565b50019056fea2646970667358221220a342f2fe3a5c8ef0f7c77f81be0cfdcbc9d4e8a59dc87d2afef9a1ebedb2e08b64736f6c634300080f0033",
}

// AdjudicatorABI is the input ABI used to generate the binding from.
// Deprecated: Use AdjudicatorMetaData.ABI instead.
var AdjudicatorABI = AdjudicatorMetaData.ABI

// AdjudicatorBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use AdjudicatorMetaData.Bin instead.
var AdjudicatorBin = AdjudicatorMetaData.Bin

// DeployAdjudicator deploys a new Ethereum contract, binding an instance of Adjudicator to it.
func DeployAdjudicator(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Adjudicator, error) {
	parsed, err := AdjudicatorMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(AdjudicatorBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Adjudicator{AdjudicatorCaller: AdjudicatorCaller{contract: contract}, AdjudicatorTransactor: AdjudicatorTransactor{contract: contract}, AdjudicatorFilterer: AdjudicatorFilterer{contract: contract}}, nil
}

// Adjudicator is an auto generated Go binding around an Ethereum contract.
type Adjudicator struct {
	AdjudicatorCaller     // Read-only binding to the contract
	AdjudicatorTransactor // Write-only binding to the contract
	AdjudicatorFilterer   // Log filterer for contract events
}

// AdjudicatorCaller is an auto generated read-only Go binding around an Ethereum contract.
type AdjudicatorCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AdjudicatorTransactor is an auto generated write-only Go binding around an Ethereum contract.
type AdjudicatorTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AdjudicatorFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type AdjudicatorFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AdjudicatorSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type AdjudicatorSession struct {
	Contract     *Adjudicator      // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// AdjudicatorCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type AdjudicatorCallerSession struct {
	Contract *AdjudicatorCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts      // Call options to use throughout this session
}

// AdjudicatorTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type AdjudicatorTransactorSession struct {
	Contract     *AdjudicatorTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// AdjudicatorRaw is an auto generated low-level Go binding around an Ethereum contract.
type AdjudicatorRaw struct {
	Contract *Adjudicator // Generic contract binding to access the raw methods on
}

// AdjudicatorCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type AdjudicatorCallerRaw struct {
	Contract *AdjudicatorCaller // Generic read-only contract binding to access the raw methods on
}

// AdjudicatorTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type AdjudicatorTransactorRaw struct {
	Contract *AdjudicatorTransactor // Generic write-only contract binding to access the raw methods on
}

// NewAdjudicator creates a new instance of Adjudicator, bound to a specific deployed contract.
func NewAdjudicator(address common.Address, backend bind.ContractBackend) (*Adjudicator, error) {
	contract, err := bindAdjudicator(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Adjudicator{AdjudicatorCaller: AdjudicatorCaller{contract: contract}, AdjudicatorTransactor: AdjudicatorTransactor{contract: contract}, AdjudicatorFilterer: AdjudicatorFilterer{contract: contract}}, nil
}

// NewAdjudicatorCaller creates a new read-only instance of Adjudicator, bound to a specific deployed contract.
func NewAdjudicatorCaller(address common.Address, caller bind.ContractCaller) (*AdjudicatorCaller, error) {
	contract, err := bindAdjudicator(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &AdjudicatorCaller{contract: contract}, nil
}

// NewAdjudicatorTransactor creates a new write-only instance of Adjudicator, bound to a specific deployed contract.
func NewAdjudicatorTransactor(address common.Address, transactor bind.ContractTransactor) (*AdjudicatorTransactor, error) {
	contract, err := bindAdjudicator(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &AdjudicatorTransactor{contract: contract}, nil
}

// NewAdjudicatorFilterer creates a new log filterer instance of Adjudicator, bound to a specific deployed contract.
func NewAdjudicatorFilterer(address common.Address, filterer bind.ContractFilterer) (*AdjudicatorFilterer, error) {
	contract, err := bindAdjudicator(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &AdjudicatorFilterer{contract: contract}, nil
}

// bindAdjudicator binds a generic wrapper to an already deployed contract.
func bindAdjudicator(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := AdjudicatorMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Adjudicator *AdjudicatorRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Adjudicator.Contract.AdjudicatorCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Adjudicator *AdjudicatorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Adjudicator.Contract.AdjudicatorTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Adjudicator *AdjudicatorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Adjudicator.Contract.AdjudicatorTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Adjudicator *AdjudicatorCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Adjudicator.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Adjudicator *AdjudicatorTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Adjudicator.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Adjudicator *AdjudicatorTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Adjudicator.Contract.contract.Transact(opts, method, params...)
}

// ChannelID is a free data retrieval call binding the contract method 0xdb77bb27.
//
// Solidity: function channelID((uint256,uint256,(address,bytes)[],address,bool,bool) params) pure returns(bytes32)
func (_Adjudicator *AdjudicatorCaller) ChannelID(opts *bind.CallOpts, params ChannelParams) ([32]byte, error) {
	var out []interface{}
	err := _Adjudicator.contract.Call(opts, &out, "channelID", params)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// ChannelID is a free data retrieval call binding the contract method 0xdb77bb27.
//
// Solidity: function channelID((uint256,uint256,(address,bytes)[],address,bool,bool) params) pure returns(bytes32)
func (_Adjudicator *AdjudicatorSession) ChannelID(params ChannelParams) ([32]byte, error) {
	return _Adjudicator.Contract.ChannelID(&_Adjudicator.CallOpts, params)
}

// ChannelID is a free data retrieval call binding the contract method 0xdb77bb27.
//
// Solidity: function channelID((uint256,uint256,(address,bytes)[],address,bool,bool) params) pure returns(bytes32)
func (_Adjudicator *AdjudicatorCallerSession) ChannelID(params ChannelParams) ([32]byte, error) {
	return _Adjudicator.Contract.ChannelID(&_Adjudicator.CallOpts, params)
}

// Disputes is a free data retrieval call binding the contract method 0x11be1997.
//
// Solidity: function disputes(bytes32 ) view returns(uint64 timeout, uint64 challengeDuration, uint64 version, uint8 phase, bytes32 stateHash, bool hasApp)
func (_Adjudicator *AdjudicatorCaller) Disputes(opts *bind.CallOpts, arg0 [32]byte) (struct {
	Timeout           uint64
	ChallengeDuration uint64
	Version           uint64
	Phase             uint8
	StateHash         [32]byte
	HasApp            bool
}, error) {
	var out []interface{}
	err := _Adjudicator.contract.Call(opts, &out, "disputes", arg0)

	outstruct := new(struct {
		Timeout           uint64
		ChallengeDuration uint64
		Version           uint64
		Phase             uint8
		StateHash         [32]byte
		HasApp            bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Timeout = *abi.ConvertType(out[0], new(uint64)).(*uint64)
	outstruct.ChallengeDuration = *abi.ConvertType(out[1], new(uint64)).(*uint64)
	outstruct.Version = *abi.ConvertType(out[2], new(uint64)).(*uint64)
	outstruct.Phase = *abi.ConvertType(out[3], new(uint8)).(*uint8)
	outstruct.StateHash = *abi.ConvertType(out[4], new([32]byte)).(*[32]byte)
	outstruct.HasApp = *abi.ConvertType(out[5], new(bool)).(*bool)

	return *outstruct, err

}

// Disputes is a free data retrieval call binding the contract method 0x11be1997.
//
// Solidity: function disputes(bytes32 ) view returns(uint64 timeout, uint64 challengeDuration, uint64 version, uint8 phase, bytes32 stateHash, bool hasApp)
func (_Adjudicator *AdjudicatorSession) Disputes(arg0 [32]byte) (struct {
	Timeout           uint64
	ChallengeDuration uint64
	Version           uint64
	Phase             uint8
	StateHash         [32]byte
	HasApp            bool
}, error) {
	return _Adjudicator.Contract.Disputes(&_Adjudicator.CallOpts, arg0)
}

// Disputes is a free data retrieval call binding the contract method 0x11be1997.
//
// Solidity: function disputes(bytes32 ) view returns(uint64 timeout, uint64 challengeDuration, uint64 version, uint8 phase, bytes32 stateHash, bool hasApp)
func (_Adjudicator *AdjudicatorCallerSession) Disputes(arg0 [32]byte) (struct {
	Timeout           uint64
	ChallengeDuration uint64
	Version           uint64
	Phase             uint8
	StateHash         [32]byte
	HasApp            bool
}, error) {
	return _Adjudicator.Contract.Disputes(&_Adjudicator.CallOpts, arg0)
}

// HashState is a free data retrieval call binding the contract method 0x7a114d3d.
//
// Solidity: function hashState((bytes32,uint64,((uint256,address,bytes)[],uint256[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool) state) pure returns(bytes32)
func (_Adjudicator *AdjudicatorCaller) HashState(opts *bind.CallOpts, state ChannelState) ([32]byte, error) {
	var out []interface{}
	err := _Adjudicator.contract.Call(opts, &out, "hashState", state)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// HashState is a free data retrieval call binding the contract method 0x7a114d3d.
//
// Solidity: function hashState((bytes32,uint64,((uint256,address,bytes)[],uint256[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool) state) pure returns(bytes32)
func (_Adjudicator *AdjudicatorSession) HashState(state ChannelState) ([32]byte, error) {
	return _Adjudicator.Contract.HashState(&_Adjudicator.CallOpts, state)
}

// HashState is a free data retrieval call binding the contract method 0x7a114d3d.
//
// Solidity: function hashState((bytes32,uint64,((uint256,address,bytes)[],uint256[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool) state) pure returns(bytes32)
func (_Adjudicator *AdjudicatorCallerSession) HashState(state ChannelState) ([32]byte, error) {
	return _Adjudicator.Contract.HashState(&_Adjudicator.CallOpts, state)
}

// Conclude is a paid mutator transaction binding the contract method 0xe7c01d05.
//
// Solidity: function conclude((uint256,uint256,(address,bytes)[],address,bool,bool) params, (bytes32,uint64,((uint256,address,bytes)[],uint256[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool) state, (bytes32,uint64,((uint256,address,bytes)[],uint256[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool)[] subStates) returns()
func (_Adjudicator *AdjudicatorTransactor) Conclude(opts *bind.TransactOpts, params ChannelParams, state ChannelState, subStates []ChannelState) (*types.Transaction, error) {
	return _Adjudicator.contract.Transact(opts, "conclude", params, state, subStates)
}

// Conclude is a paid mutator transaction binding the contract method 0xe7c01d05.
//
// Solidity: function conclude((uint256,uint256,(address,bytes)[],address,bool,bool) params, (bytes32,uint64,((uint256,address,bytes)[],uint256[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool) state, (bytes32,uint64,((uint256,address,bytes)[],uint256[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool)[] subStates) returns()
func (_Adjudicator *AdjudicatorSession) Conclude(params ChannelParams, state ChannelState, subStates []ChannelState) (*types.Transaction, error) {
	return _Adjudicator.Contract.Conclude(&_Adjudicator.TransactOpts, params, state, subStates)
}

// Conclude is a paid mutator transaction binding the contract method 0xe7c01d05.
//
// Solidity: function conclude((uint256,uint256,(address,bytes)[],address,bool,bool) params, (bytes32,uint64,((uint256,address,bytes)[],uint256[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool) state, (bytes32,uint64,((uint256,address,bytes)[],uint256[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool)[] subStates) returns()
func (_Adjudicator *AdjudicatorTransactorSession) Conclude(params ChannelParams, state ChannelState, subStates []ChannelState) (*types.Transaction, error) {
	return _Adjudicator.Contract.Conclude(&_Adjudicator.TransactOpts, params, state, subStates)
}

// ConcludeFinal is a paid mutator transaction binding the contract method 0x75a87223.
//
// Solidity: function concludeFinal((uint256,uint256,(address,bytes)[],address,bool,bool) params, (bytes32,uint64,((uint256,address,bytes)[],uint256[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool) state, bytes[] sigs) returns()
func (_Adjudicator *AdjudicatorTransactor) ConcludeFinal(opts *bind.TransactOpts, params ChannelParams, state ChannelState, sigs [][]byte) (*types.Transaction, error) {
	return _Adjudicator.contract.Transact(opts, "concludeFinal", params, state, sigs)
}

// ConcludeFinal is a paid mutator transaction binding the contract method 0x75a87223.
//
// Solidity: function concludeFinal((uint256,uint256,(address,bytes)[],address,bool,bool) params, (bytes32,uint64,((uint256,address,bytes)[],uint256[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool) state, bytes[] sigs) returns()
func (_Adjudicator *AdjudicatorSession) ConcludeFinal(params ChannelParams, state ChannelState, sigs [][]byte) (*types.Transaction, error) {
	return _Adjudicator.Contract.ConcludeFinal(&_Adjudicator.TransactOpts, params, state, sigs)
}

// ConcludeFinal is a paid mutator transaction binding the contract method 0x75a87223.
//
// Solidity: function concludeFinal((uint256,uint256,(address,bytes)[],address,bool,bool) params, (bytes32,uint64,((uint256,address,bytes)[],uint256[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool) state, bytes[] sigs) returns()
func (_Adjudicator *AdjudicatorTransactorSession) ConcludeFinal(params ChannelParams, state ChannelState, sigs [][]byte) (*types.Transaction, error) {
	return _Adjudicator.Contract.ConcludeFinal(&_Adjudicator.TransactOpts, params, state, sigs)
}

// Progress is a paid mutator transaction binding the contract method 0x4c8a2c90.
//
// Solidity: function progress((uint256,uint256,(address,bytes)[],address,bool,bool) params, (bytes32,uint64,((uint256,address,bytes)[],uint256[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool) stateOld, (bytes32,uint64,((uint256,address,bytes)[],uint256[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool) state, uint256 actorIdx, bytes sig) returns()
func (_Adjudicator *AdjudicatorTransactor) Progress(opts *bind.TransactOpts, params ChannelParams, stateOld ChannelState, state ChannelState, actorIdx *big.Int, sig []byte) (*types.Transaction, error) {
	return _Adjudicator.contract.Transact(opts, "progress", params, stateOld, state, actorIdx, sig)
}

// Progress is a paid mutator transaction binding the contract method 0x4c8a2c90.
//
// Solidity: function progress((uint256,uint256,(address,bytes)[],address,bool,bool) params, (bytes32,uint64,((uint256,address,bytes)[],uint256[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool) stateOld, (bytes32,uint64,((uint256,address,bytes)[],uint256[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool) state, uint256 actorIdx, bytes sig) returns()
func (_Adjudicator *AdjudicatorSession) Progress(params ChannelParams, stateOld ChannelState, state ChannelState, actorIdx *big.Int, sig []byte) (*types.Transaction, error) {
	return _Adjudicator.Contract.Progress(&_Adjudicator.TransactOpts, params, stateOld, state, actorIdx, sig)
}

// Progress is a paid mutator transaction binding the contract method 0x4c8a2c90.
//
// Solidity: function progress((uint256,uint256,(address,bytes)[],address,bool,bool) params, (bytes32,uint64,((uint256,address,bytes)[],uint256[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool) stateOld, (bytes32,uint64,((uint256,address,bytes)[],uint256[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool) state, uint256 actorIdx, bytes sig) returns()
func (_Adjudicator *AdjudicatorTransactorSession) Progress(params ChannelParams, stateOld ChannelState, state ChannelState, actorIdx *big.Int, sig []byte) (*types.Transaction, error) {
	return _Adjudicator.Contract.Progress(&_Adjudicator.TransactOpts, params, stateOld, state, actorIdx, sig)
}

// Register is a paid mutator transaction binding the contract method 0xe9aa7e02.
//
// Solidity: function register(((uint256,uint256,(address,bytes)[],address,bool,bool),(bytes32,uint64,((uint256,address,bytes)[],uint256[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool),bytes[]) channel, ((uint256,uint256,(address,bytes)[],address,bool,bool),(bytes32,uint64,((uint256,address,bytes)[],uint256[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool),bytes[])[] subChannels) returns()
func (_Adjudicator *AdjudicatorTransactor) Register(opts *bind.TransactOpts, channel AdjudicatorSignedState, subChannels []AdjudicatorSignedState) (*types.Transaction, error) {
	return _Adjudicator.contract.Transact(opts, "register", channel, subChannels)
}

// Register is a paid mutator transaction binding the contract method 0xe9aa7e02.
//
// Solidity: function register(((uint256,uint256,(address,bytes)[],address,bool,bool),(bytes32,uint64,((uint256,address,bytes)[],uint256[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool),bytes[]) channel, ((uint256,uint256,(address,bytes)[],address,bool,bool),(bytes32,uint64,((uint256,address,bytes)[],uint256[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool),bytes[])[] subChannels) returns()
func (_Adjudicator *AdjudicatorSession) Register(channel AdjudicatorSignedState, subChannels []AdjudicatorSignedState) (*types.Transaction, error) {
	return _Adjudicator.Contract.Register(&_Adjudicator.TransactOpts, channel, subChannels)
}

// Register is a paid mutator transaction binding the contract method 0xe9aa7e02.
//
// Solidity: function register(((uint256,uint256,(address,bytes)[],address,bool,bool),(bytes32,uint64,((uint256,address,bytes)[],uint256[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool),bytes[]) channel, ((uint256,uint256,(address,bytes)[],address,bool,bool),(bytes32,uint64,((uint256,address,bytes)[],uint256[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool),bytes[])[] subChannels) returns()
func (_Adjudicator *AdjudicatorTransactorSession) Register(channel AdjudicatorSignedState, subChannels []AdjudicatorSignedState) (*types.Transaction, error) {
	return _Adjudicator.Contract.Register(&_Adjudicator.TransactOpts, channel, subChannels)
}

// AdjudicatorChannelUpdateIterator is returned from FilterChannelUpdate and is used to iterate over the raw logs and unpacked data for ChannelUpdate events raised by the Adjudicator contract.
type AdjudicatorChannelUpdateIterator struct {
	Event *AdjudicatorChannelUpdate // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AdjudicatorChannelUpdateIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AdjudicatorChannelUpdate)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AdjudicatorChannelUpdate)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AdjudicatorChannelUpdateIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AdjudicatorChannelUpdateIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AdjudicatorChannelUpdate represents a ChannelUpdate event raised by the Adjudicator contract.
type AdjudicatorChannelUpdate struct {
	ChannelID [32]byte
	Version   uint64
	Phase     uint8
	Timeout   uint64
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterChannelUpdate is a free log retrieval operation binding the contract event 0x895ef5a5fc3efd313a300b006d6ce97ff0670dfe04f6eea90417edf924fa786b.
//
// Solidity: event ChannelUpdate(bytes32 indexed channelID, uint64 version, uint8 phase, uint64 timeout)
func (_Adjudicator *AdjudicatorFilterer) FilterChannelUpdate(opts *bind.FilterOpts, channelID [][32]byte) (*AdjudicatorChannelUpdateIterator, error) {

	var channelIDRule []interface{}
	for _, channelIDItem := range channelID {
		channelIDRule = append(channelIDRule, channelIDItem)
	}

	logs, sub, err := _Adjudicator.contract.FilterLogs(opts, "ChannelUpdate", channelIDRule)
	if err != nil {
		return nil, err
	}
	return &AdjudicatorChannelUpdateIterator{contract: _Adjudicator.contract, event: "ChannelUpdate", logs: logs, sub: sub}, nil
}

// WatchChannelUpdate is a free log subscription operation binding the contract event 0x895ef5a5fc3efd313a300b006d6ce97ff0670dfe04f6eea90417edf924fa786b.
//
// Solidity: event ChannelUpdate(bytes32 indexed channelID, uint64 version, uint8 phase, uint64 timeout)
func (_Adjudicator *AdjudicatorFilterer) WatchChannelUpdate(opts *bind.WatchOpts, sink chan<- *AdjudicatorChannelUpdate, channelID [][32]byte) (event.Subscription, error) {

	var channelIDRule []interface{}
	for _, channelIDItem := range channelID {
		channelIDRule = append(channelIDRule, channelIDItem)
	}

	logs, sub, err := _Adjudicator.contract.WatchLogs(opts, "ChannelUpdate", channelIDRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AdjudicatorChannelUpdate)
				if err := _Adjudicator.contract.UnpackLog(event, "ChannelUpdate", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseChannelUpdate is a log parse operation binding the contract event 0x895ef5a5fc3efd313a300b006d6ce97ff0670dfe04f6eea90417edf924fa786b.
//
// Solidity: event ChannelUpdate(bytes32 indexed channelID, uint64 version, uint8 phase, uint64 timeout)
func (_Adjudicator *AdjudicatorFilterer) ParseChannelUpdate(log types.Log) (*AdjudicatorChannelUpdate, error) {
	event := new(AdjudicatorChannelUpdate)
	if err := _Adjudicator.contract.UnpackLog(event, "ChannelUpdate", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
